---
kind: pipeline
name: default
type: kubernetes

steps:
- name: build_10
  pull: if-not-exists
  image: node:10
  commands:
  - npm --loglevel warn install
  - npm test
  when:
    event: [ push, pull_request ]

- name: build_brpapp
  pull: if-not-exists
  image: docker:dind
  commands:
    - n=0; while [ "$n" -lt 60 ] && [ ! -e /var/run/docker.sock ]; do n=$(( n + 1 )); sleep 1; done
    - docker build -t app-$${DRONE_COMMIT_SHA} .
  volumes:
    - name: dockersock
      path: /var/run
  when:
    branch: [ master, features/* ]
    event: push

- name: build_acceptance
  pull: if-not-exists
  image: docker:dind
  commands:
    - n=0; while [ "$n" -lt 60 ] && [ ! -e /var/run/docker.sock ]; do n=$(( n + 1 )); sleep 1; done
    - docker build -f Dockerfile-acceptance -t acceptance-$${DRONE_COMMIT_SHA} .
  volumes:
    - name: dockersock
      path: /var/run
  when:
    branch: [ master, features/* ]
    event: push

- name: test_acceptance
  pull: if-not-exists
  image: docker:dind
  commands:
  - n=0; while [ "$n" -lt 60 ] && [ ! -e /var/run/docker.sock ]; do n=$(( n + 1 )); sleep 1; done
  - docker run -d --name=redis-$${DRONE_COMMIT_SHA} redis
  - docker run -d -e NODE_ENV=ci -e DISABLE_CSP=true --name=app-$${DRONE_COMMIT_SHA} --net=container:redis-$${DRONE_COMMIT_SHA} app-$${DRONE_COMMIT_SHA}
  - docker run --rm --net=container:app-$${DRONE_COMMIT_SHA} acceptance-$${DRONE_COMMIT_SHA}
  - docker rm -vf "app-$${DRONE_COMMIT_SHA}" "redis-$${DRONE_COMMIT_SHA}"
  volumes:
    - name: dockersock
      path: /var/run
  when:
    branch: [ master, features/* ]
    event: push

- name: image_to_quay
  pull: if-not-exists
  image: docker:dind
  environment:
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
  commands:
  - docker login -u="ukhomeofficedigital+drone" -p=$${DOCKER_PASSWORD} quay.io
  - docker tag app-$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/brpapp:${DRONE_COMMIT_SHA}
  - docker push quay.io/ukhomeofficedigital/brpapp:$${DRONE_COMMIT_SHA}
  volumes:
    - name: dockersock
      path: /var/run
  when:
    branch: master
    event: push

- name: trigger_deploy_to_brp_dev
  pull: if-not-exists
  image: plugins/downstream
  settings:
    server: https://drone-gh.acp.homeoffice.gov.uk
    deploy: dev
    last_successful: true
    token:
      from_secret: DRONE_TOKEN
    repositories: UKHomeOffice/kube-brpapp@master
    fork: true
    params:
      - BRPAPP_IMAGE_TAG=${DRONE_COMMIT_SHA}
      - KUBE_NAMESPACE=brp-dev
  when:
    branch: master
    event: push

- name: trigger_deploy_to_brp_preprod
  pull: if-not-exists
  image: plugins/downstream
  settings:
    server: https://drone-gh.acp.homeoffice.gov.uk
    deploy: preprod
    last_successful: true
    token:
      from_secret: DRONE_TOKEN
    repositories: UKHomeOffice/kube-brpapp@master
    fork: true
    params:
      - BRPAPP_IMAGE_TAG=${DRONE_COMMIT_SHA}
      - KUBE_NAMESPACE=brp-preprod
    when:
      event: promote
      target: preprod

- name: trigger_deploy_to_brp_prod
  pull: if-not-exists
  image: plugins/downstream
  settings:
    server: https://drone-gh.acp.homeoffice.gov.uk
    deploy: prod
    last_successful: true
    token:
      from_secret: DRONE_TOKEN
    repositories: UKHomeOffice/kube-brpapp@master
    fork: true
    params:
      - BRPAPP_IMAGE_TAG=${DRONE_COMMIT_SHA}
      - KUBE_NAMESPACE=brp
    when:
      event: promote
      target: prod

services:
  - name: docker
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}

...
